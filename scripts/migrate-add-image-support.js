import Database from 'better-sqlite3';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const dbPath = join(__dirname, '..', 'data', 'bot.db');
const db = new Database(dbPath);

console.log('üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ image-to-video...');

try {
  // Check if column already exists
  const tableInfo = db.prepare("PRAGMA table_info(job_queue)").all();
  const hasImageFileId = tableInfo.some(col => col.name === 'image_file_id');

  if (!hasImageFileId) {
    console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ image_file_id –≤ job_queue...');
    db.prepare("ALTER TABLE job_queue ADD COLUMN image_file_id TEXT").run();
    console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ image_file_id –¥–æ–±–∞–≤–ª–µ–Ω–∞');
  } else {
    console.log('‚úì –ö–æ–ª–æ–Ω–∫–∞ image_file_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
  }

  // Check pending_prompts table
  const promptTableInfo = db.prepare("PRAGMA table_info(pending_prompts)").all();
  const hasMetadata = promptTableInfo.some(col => col.name === 'metadata');

  if (!hasMetadata) {
    console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ metadata –≤ pending_prompts...');
    db.prepare("ALTER TABLE pending_prompts ADD COLUMN metadata TEXT").run();
    console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ metadata –¥–æ–±–∞–≤–ª–µ–Ω–∞');
  } else {
    console.log('‚úì –ö–æ–ª–æ–Ω–∫–∞ metadata —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
  }

  console.log('\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error.message);
  process.exit(1);
}

db.close();
