// Real Sora API costs from photo
const SORA_COSTS_USD = {
  'sora-2': {
    '720x1280': 0.10,  // 720p portrait
    '1280x720': 0.10,  // 720p landscape
    '1024x1024': 0.10, // 720p square
  },
  'sora-2-pro': {
    '720x1280': 0.30,  // 720p portrait
    '1280x720': 0.30,  // 720p landscape
    '1024x1024': 0.30, // 720p square
    '1024x1792': 0.50, // 1080p portrait
    '1792x1024': 0.50, // 1080p landscape
  }
};

const USD_TO_KZT = 480;
const PROFIT_MARGIN = 1.5; // 50% profit
const STRIPE_PERCENT = 0.029; // 2.9%
const STRIPE_FIXED_USD = 0.30;

function calculateSellingPrice(seconds, model, size) {
  const costPerSecondUSD = SORA_COSTS_USD[model][size];
  const totalCostUSD = seconds * costPerSecondUSD;
  const totalCostKZT = totalCostUSD * USD_TO_KZT;

  // Add profit margin
  const priceWithProfit = totalCostKZT * PROFIT_MARGIN;

  // Account for Stripe fees: final_price = (price_with_profit + stripe_fixed) / (1 - stripe_percent)
  const stripeFeeKZT = STRIPE_FIXED_USD * USD_TO_KZT;
  const finalPrice = (priceWithProfit + stripeFeeKZT) / (1 - STRIPE_PERCENT);

  return Math.ceil(finalPrice);
}

console.log('=== –†–ê–°–ß–ï–¢ –¶–ï–ù –ù–ê –í–ò–î–ï–û ===\n');

// Calculate for 8 seconds (standard video)
console.log('üìπ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –≤–∏–¥–µ–æ (8 —Å–µ–∫—É–Ω–¥):');
console.log('-----------------------------------');

const models = ['sora-2', 'sora-2-pro'];
const sizes = {
  '720x1280': '–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ 720p',
  '1280x720': '–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ 720p',
  '1024x1024': '–ö–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ 720p',
  '1024x1792': '–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ 1080p',
  '1792x1024': '–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ 1080p',
};

models.forEach(model => {
  console.log(`\n${model.toUpperCase()}:`);
  Object.entries(sizes).forEach(([size, label]) => {
    if (SORA_COSTS_USD[model][size]) {
      const price = calculateSellingPrice(8, model, size);
      const cost = 8 * SORA_COSTS_USD[model][size] * USD_TO_KZT;
      const profit = price - cost;
      console.log(`  ${label} (${size}): ${price}‚Ç∏ (–∑–∞—Ç—Ä–∞—Ç—ã: ${Math.ceil(cost)}‚Ç∏, –ø—Ä–∏–±—ã–ª—å: ${Math.ceil(profit)}‚Ç∏)`);
    }
  });
});

// Calculate package prices
console.log('\n\n=== –ü–ê–ö–ï–¢–´ –¢–û–ö–ï–ù–û–í ===\n');

// –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–∞–∫–µ—Ç - –¥–æ–ª–∂–µ–Ω –ø–æ–∑–≤–æ–ª–∏—Ç—å –∫—É–ø–∏—Ç—å 1 –≤–∏–¥–µ–æ sora-2 8 —Å–µ–∫
const minVideoPrice = calculateSellingPrice(8, 'sora-2', '1280x720');
console.log(`–¶–µ–Ω–∞ 1 –≤–∏–¥–µ–æ (8 —Å–µ–∫, sora-2, 720p): ${minVideoPrice}‚Ç∏\n`);

// –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–µ –ø–∞–∫–µ—Ç—ã
const packages = [
  { tokens: minVideoPrice, discount: 0 },      // –ú–∏–Ω–∏–º—É–º - 1 –≤–∏–¥–µ–æ
  { tokens: minVideoPrice * 2, discount: 0.10 }, // 2 –≤–∏–¥–µ–æ - —Å–∫–∏–¥–∫–∞ 10%
  { tokens: minVideoPrice * 5, discount: 0.15 }, // 5 –≤–∏–¥–µ–æ - —Å–∫–∏–¥–∫–∞ 15%
  { tokens: minVideoPrice * 10, discount: 0.20 }, // 10 –≤–∏–¥–µ–æ - —Å–∫–∏–¥–∫–∞ 20%
];

packages.forEach((pkg, idx) => {
  const basePrice = pkg.tokens;
  const discountedPrice = Math.ceil(basePrice * (1 - pkg.discount));
  const videos = Math.floor(pkg.tokens / minVideoPrice);

  console.log(`–ü–∞–∫–µ—Ç ${idx + 1}: ${pkg.tokens}‚Ç∏ —Ç–æ–∫–µ–Ω–æ–≤`);
  console.log(`  –¶–µ–Ω–∞: ${discountedPrice}‚Ç∏ (—Å–∫–∏–¥–∫–∞ ${pkg.discount * 100}%)`);
  console.log(`  –ú–æ–∂–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å: ~${videos} –≤–∏–¥–µ–æ (8 —Å–µ–∫, sora-2, 720p)`);
  console.log('');
});

console.log('\n=== –¢–ê–ë–õ–ò–¶–ê –¶–ï–ù –î–õ–Ø –í–°–ï–• –î–õ–ò–¢–ï–õ–¨–ù–û–°–¢–ï–ô ===\n');

const durations = [4, 6, 8, 10, 12];

console.log('SORA-2 (720p):');
durations.forEach(sec => {
  const price = calculateSellingPrice(sec, 'sora-2', '1280x720');
  console.log(`  ${sec} —Å–µ–∫: ${price}‚Ç∏`);
});

console.log('\nSORA-2-PRO (720p):');
durations.forEach(sec => {
  const price = calculateSellingPrice(sec, 'sora-2-pro', '1280x720');
  console.log(`  ${sec} —Å–µ–∫: ${price}‚Ç∏`);
});

console.log('\nSORA-2-PRO (1080p):');
durations.forEach(sec => {
  const price = calculateSellingPrice(sec, 'sora-2-pro', '1024x1792');
  console.log(`  ${sec} —Å–µ–∫: ${price}‚Ç∏`);
});
